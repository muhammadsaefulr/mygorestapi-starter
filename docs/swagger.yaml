basePath: /api/v1
definitions:
  example.CreateUserResponse:
    properties:
      code:
        example: 201
        type: integer
      message:
        example: Create user successfully
        type: string
      status:
        example: success
        type: string
      user:
        $ref: '#/definitions/example.User'
    type: object
  example.DeleteUserResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Delete user successfully
        type: string
      status:
        example: success
        type: string
    type: object
  example.DuplicateEmail:
    properties:
      code:
        example: 409
        type: integer
      message:
        example: Email already taken
        type: string
      status:
        example: error
        type: string
    type: object
  example.FailedLogin:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Invalid email or password
        type: string
      status:
        example: error
        type: string
    type: object
  example.FailedResetPassword:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Password reset failed
        type: string
      status:
        example: error
        type: string
    type: object
  example.FailedVerifyEmail:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Verify email failed
        type: string
      status:
        example: error
        type: string
    type: object
  example.Forbidden:
    properties:
      code:
        example: 403
        type: integer
      message:
        example: You don't have permission to access this resource
        type: string
      status:
        example: error
        type: string
    type: object
  example.ForgotPasswordResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: A password reset link has been sent to your email address.
        type: string
      status:
        example: success
        type: string
    type: object
  example.GetAllUserResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/example.User'
        type: array
      limit:
        example: 10
        type: integer
      message:
        example: Get all users successfully
        type: string
      page:
        example: 1
        type: integer
      status:
        example: success
        type: string
      total_pages:
        example: 1
        type: integer
      total_results:
        example: 1
        type: integer
    type: object
  example.GetOdAnimeByGenreResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreAnime'
      message:
        type: string
      status:
        type: string
    type: object
  example.GetOdAnimeEpisodeResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.EpisodePageResult'
      message:
        example: Berhasil mengambil data!
        type: string
      status:
        example: success
        type: string
    type: object
  example.GetOdAnimeEpisodeVideoResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeSourceData'
      message:
        type: string
      status:
        type: string
    type: object
  example.GetOdAnimeHomeResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeData'
        type: array
      message:
        example: Berhasil mengambil data!
        type: string
      status:
        example: success
        type: string
    type: object
  example.GetUserResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Get user successfully
        type: string
      status:
        example: success
        type: string
      user:
        $ref: '#/definitions/example.User'
    type: object
  example.GoogleLoginResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Login successfully
        type: string
      status:
        example: success
        type: string
      tokens:
        $ref: '#/definitions/example.Tokens'
      user:
        $ref: '#/definitions/example.GoogleUser'
    type: object
  example.GoogleUser:
    properties:
      email:
        example: fake@example.com
        type: string
      id:
        example: e088d183-9eea-4a11-8d5d-74d7ec91bdf5
        type: string
      name:
        example: fake name
        type: string
      role:
        example: user
        type: string
      verified_email:
        example: true
        type: boolean
    type: object
  example.HealthCheck:
    properties:
      is_up:
        example: true
        type: boolean
      name:
        example: Postgre
        type: string
      status:
        example: Up
        type: string
    type: object
  example.HealthCheckError:
    properties:
      is_up:
        example: false
        type: boolean
      message:
        example: 'failed to connect to ''host=localhost user=postgres database=wrongdb'':
          server error (FATAL: database "wrongdb" does not exist (SQLSTATE 3D000))'
        type: string
      name:
        example: Postgre
        type: string
      status:
        example: Down
        type: string
    type: object
  example.HealthCheckResponse:
    properties:
      code:
        example: 200
        type: integer
      is_healthy:
        example: true
        type: boolean
      message:
        example: Health check completed
        type: string
      result:
        items:
          $ref: '#/definitions/example.HealthCheck'
        type: array
      status:
        example: success
        type: string
    type: object
  example.HealthCheckResponseError:
    properties:
      code:
        example: 500
        type: integer
      is_healthy:
        example: false
        type: boolean
      message:
        example: Health check completed
        type: string
      result:
        items:
          $ref: '#/definitions/example.HealthCheckError'
        type: array
      status:
        example: error
        type: string
    type: object
  example.LoginResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Login successfully
        type: string
      status:
        example: success
        type: string
      tokens:
        $ref: '#/definitions/example.Tokens'
      user:
        $ref: '#/definitions/example.User'
    type: object
  example.LogoutResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Logout successfully
        type: string
      status:
        example: success
        type: string
    type: object
  example.NotFound:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: Not found
        type: string
      status:
        example: error
        type: string
    type: object
  example.RefreshToken:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        type: string
    type: object
  example.RefreshTokenResponse:
    properties:
      code:
        example: 200
        type: integer
      status:
        example: success
        type: string
      tokens:
        $ref: '#/definitions/example.Tokens'
    type: object
  example.RegisterResponse:
    properties:
      code:
        example: 201
        type: integer
      message:
        example: Register successfully
        type: string
      status:
        example: success
        type: string
      tokens:
        $ref: '#/definitions/example.Tokens'
      user:
        $ref: '#/definitions/example.User'
    type: object
  example.ResetPasswordResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Update password successfully
        type: string
      status:
        example: success
        type: string
    type: object
  example.SendVerificationEmailResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Please check your email for a link to verify your account
        type: string
      status:
        example: success
        type: string
    type: object
  example.TokenExpires:
    properties:
      expires:
        example: "2024-10-07T11:56:46.618180553Z"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        type: string
    type: object
  example.Tokens:
    properties:
      access:
        $ref: '#/definitions/example.TokenExpires'
      refresh:
        $ref: '#/definitions/example.TokenExpires'
    type: object
  example.Unauthorized:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Please authenticate
        type: string
      status:
        example: error
        type: string
    type: object
  example.UpdateUserResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Update user successfully
        type: string
      status:
        example: success
        type: string
      user:
        $ref: '#/definitions/example.User'
    type: object
  example.User:
    properties:
      email:
        example: fake@example.com
        type: string
      id:
        example: e088d183-9eea-4a11-8d5d-74d7ec91bdf5
        type: string
      name:
        example: fake name
        type: string
      role:
        example: user
        type: string
      verified_email:
        example: false
        type: boolean
    type: object
  example.VerifyEmailResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Verify email successfully
        type: string
      status:
        example: success
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.ForgotPassword:
    properties:
      email:
        example: fake@example.com
        maxLength: 50
        type: string
    required:
    - email
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Login:
    properties:
      email:
        example: fake@example.com
        maxLength: 50
        type: string
      password:
        example: password1
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Register:
    properties:
      email:
        example: fake@example.com
        maxLength: 50
        type: string
      name:
        example: fake name
        maxLength: 50
        type: string
      password:
        example: password1
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.CreateComment:
    properties:
      content:
        type: string
      movie_id:
        type: string
    required:
    - content
    - movie_id
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.UpdateComment:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.CreateHistory:
    properties:
      movie_eps_id:
        type: string
      movie_id:
        type: string
      playback_time:
        type: integer
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.UpdateHistory:
    properties:
      playback_time:
        type: integer
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.CreateMovieDetails:
    properties:
      genres:
        example:
        - demon
        - fantasy
        - supernatural
        items:
          type: string
        type: array
      movie_id:
        example: wu-nao-monu
        type: string
      movie_type:
        example: anime
        type: string
      producer:
        example: Agate
        type: string
      rating:
        example: "5.9"
        type: string
      release_date:
        example: "2023-05-01"
        type: string
      status:
        example: complete
        type: string
      studio:
        example: Agate
        type: string
      synopsis:
        example: Agate is a demon girl cursed with an eternal life. To forget the
          past, she throws half of her head into a deep valley and runs away. Unexpectedly,
          the tears flood the valley floor and form into a lake, triggering a flood
          in hell. Aloys, the Prince of Ghost comes to the Human World to find out
          the truth and finally finds the demon girl, starting a story of life and
          love.
        type: string
      thumbnail_url:
        example: https://s4.anilist.co/file/anilistcdn/media/anime/cover/medium/bx141914-P1xQHMXN7q6z.png
        type: string
      title:
        example: Wu Nao Monü
        type: string
      total_eps:
        example: "15"
        type: string
    required:
    - genres
    - movie_id
    - movie_type
    - thumbnail_url
    - title
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.UpdateMovieDetails:
    properties:
      genres:
        example:
        - demon
        - fantasy
        - supernatural
        items:
          type: string
        type: array
      movie_type:
        example: anime
        type: string
      producer:
        example: Agate
        type: string
      rating:
        example: "5.9"
        type: string
      release_date:
        example: "2023-05-01"
        type: string
      status:
        example: complete
        type: string
      studio:
        example: Agate
        type: string
      synopsis:
        example: Agate is a demon girl cursed with an eternal life. To forget the
          past, she throws half of her head into a deep valley and runs away. Unexpectedly,
          the tears flood the valley floor and form into a lake, triggering a flood
          in hell. Aloys, the Prince of Ghost comes to the Human World to find out
          the truth and finally finds the demon girl, starting a story of life and
          love.
        type: string
      thumbnail_url:
        example: https://s4.anilist.co/file/anilistcdn/media/anime/cover/medium/bx141914-P1xQHMXN7q6z.png
        type: string
      title:
        example: Wu Nao Monü
        type: string
      total_eps:
        example: "15"
        type: string
    required:
    - genres
    - movie_type
    - thumbnail_url
    - title
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response.MovieDetailOnlyResponse:
    properties:
      created_at:
        type: string
      genres:
        items:
          type: string
        type: array
      movie_id:
        type: string
      movie_type:
        type: string
      producer:
        type: string
      rating:
        type: string
      release_date:
        type: string
      status:
        type: string
      studio:
        type: string
      synopsis:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      total_eps:
        type: string
      updated_at:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.CreateMovieEpisodes:
    properties:
      movie_eps_id:
        example: wu-nao-monu-eps-1
        type: string
      movie_id:
        example: wu-nao-monu
        type: string
      resolution:
        example: 720p
        type: string
      title:
        example: upload
        type: string
      video_url:
        example: youtube
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.UpdateMovieEpisodes:
    properties:
      movie_id:
        type: string
      resolution:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.CreateRequestMovie:
    properties:
      description:
        example: Yuuji Itadori joins Jujutsu Tech to exorcise curses.
        type: string
      genre:
        example:
        - Action
        - Shounen
        items:
          type: string
        type: array
      status_movie:
        example: Ongoing
        type: string
      status_request:
        example: Pending
        type: string
      title:
        example: Jujutsu Kaisen Season 2
        type: string
      type_movie:
        example: Anime
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.UpdateRequestMovie:
    properties:
      description:
        example: Yuuji Itadori joins Jujutsu Tech to exorcise curses.
        type: string
      genre:
        example:
        - Action
        - Shounen
        items:
          type: string
        type: array
      status_movie:
        example: Ongoing
        type: string
      status_request:
        example: Pending
        type: string
      title:
        example: Jujutsu Kaisen Season 2
        type: string
      type_movie:
        example: TV
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.RequestMovieResponse:
    properties:
      created_at:
        example: "2025-06-27T15:04:05Z"
        type: string
      description:
        example: Yuuji Itadori joins Jujutsu Tech to exorcise curses.
        type: string
      genre:
        example:
        - '["Action"'
        - ' "Shounen"]'
        items:
          type: string
        type: array
      id:
        example: 1
        type: integer
      requested_by:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.UserResponse'
      status_movie:
        example: Ongoing
        type: string
      status_request:
        example: Pending
        type: string
      title:
        example: Jujutsu Kaisen Season 2
        type: string
      type_movie:
        example: TV
        type: string
      updated_at:
        example: "2025-06-27T15:04:05Z"
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.UserResponse:
    properties:
      id:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      name:
        example: Saeful
        type: string
      role:
        example: user
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.CreateUser:
    properties:
      email:
        example: fake@example.com
        maxLength: 50
        type: string
      name:
        example: fake name
        maxLength: 50
        type: string
      password:
        example: password1
        maxLength: 20
        minLength: 8
        type: string
      role:
        enum:
        - user
        - admin
        example: user
        maxLength: 50
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdatePassOrVerify:
    properties:
      password:
        example: password1
        maxLength: 20
        minLength: 8
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdateUser:
    properties:
      email:
        example: fake@example.com
        maxLength: 50
        type: string
      name:
        example: fake name
        maxLength: 50
        type: string
      password:
        example: password1
        maxLength: 20
        minLength: 8
        type: string
      role:
        enum:
        - user
        - admin
        example: user
        maxLength: 50
        type: string
    type: object
  ? github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse
  : properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.RequestMovieResponse'
      message:
        type: string
      status:
        type: string
    type: object
  ? github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails
  : properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails'
      message:
        type: string
      status:
        type: string
    type: object
  ? github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieEpisode
  : properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieEpisode'
      message:
        type: string
      status:
        type: string
    type: object
  ? github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse
  : properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response.MovieDetailOnlyResponse'
        type: array
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      status:
        type: string
      total_pages:
        type: integer
      total_results:
        type: integer
    type: object
  ? github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse
  : properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.RequestMovieResponse'
        type: array
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      status:
        type: string
      total_pages:
        type: integer
      total_results:
        type: integer
    type: object
  ? github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails
  : properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails'
        type: array
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      status:
        type: string
      total_pages:
        type: integer
      total_results:
        type: integer
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-model_MovieDetails:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails'
        type: array
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      status:
        type: string
      total_pages:
        type: integer
      total_results:
        type: integer
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.CreateWatchlist:
    properties:
      movie_id:
        type: string
    required:
    - movie_id
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.UpdateWatchlist:
    properties:
      movie_id:
        type: string
    required:
    - movie_id
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeData:
    properties:
      judul_path:
        type: string
      latest_ep:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      update_anime:
        type: string
      url:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeDetail:
    properties:
      duration:
        type: string
      genres:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreInfo'
        type: array
      producer:
        type: string
      rating:
        type: string
      release_date:
        type: string
      status:
        type: string
      studio:
        type: string
      synopsis:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      total_eps:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode:
    properties:
      title:
        type: string
      video_url:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeSourceData:
    properties:
      current_ep:
        type: string
      detail_url:
        type: string
      download_url:
        type: string
      episodes:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode'
        type: array
      next_ep_url:
        type: string
      release_date:
        type: string
      sources:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.VideoSource'
        type: array
      thumbnail_url:
        type: string
      title:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.EpisodePageResult:
    properties:
      anime_detail:
        $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeDetail'
      episode:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode'
        type: array
      rekomend:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.SearchResult'
        type: array
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreAnime:
    properties:
      episodes:
        type: string
      rating:
        type: string
      studio:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreInfo:
    properties:
      title:
        type: string
      url:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails:
    properties:
      created_at:
        type: string
      genres:
        items:
          type: string
        type: array
      movie_id:
        type: string
      movie_type:
        type: string
      producer:
        type: string
      rating:
        type: string
      release_date:
        type: string
      status:
        type: string
      studio:
        type: string
      synopsis:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      total_eps:
        type: string
      updated_at:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieEpisode:
    properties:
      created_at:
        type: string
      id:
        type: integer
      movieEpsID:
        type: string
      movieId:
        type: string
      resolution:
        type: string
      sourceBy:
        type: string
      title:
        description: title untuk penentu source nya misal pixeldrain atau uploads
        type: string
      updated_at:
        type: string
      videoURL:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.SearchResult:
    properties:
      genres:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreInfo'
        type: array
      rating:
        type: string
      status:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.VideoSource:
    properties:
      data_list:
        items:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode'
        type: array
      res:
        type: string
    type: object
info:
  contact: {}
  title: NimeStream API documentation
  version: 1.0.0
paths:
  /anilists:
    get:
      description: Retrieve anime from AniList API based on category. When using category=rekom,
        'search' is required to perform a title-based recommendation.
      parameters:
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        maximum: 50
        minimum: 1
        name: limit
        type: integer
      - default: popular
        description: Discovery category
        enum:
        - popular
        - trending
        - ongoing
        - rekom
        in: query
        name: category
        type: string
      - default: one piece
        description: Search term. Required if category is 'rekom'
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-model_MovieDetails'
      summary: Get anime discovery list (popular, trending, ongoing, rekomendasi)
      tags:
      - Anilist
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: An email will be sent to reset password.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.ForgotPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.ForgotPasswordResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/example.NotFound'
      summary: Forgot password
      tags:
      - Auth
  /auth/google:
    get:
      description: This route initiates the Google OAuth2 login flow. Please try this
        in your browser.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GoogleLoginResponse'
      summary: Login with google
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.LoginResponse'
        "401":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/example.FailedLogin'
      summary: Login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/example.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.LogoutResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/example.NotFound'
      summary: Logout
      tags:
      - Auth
  /auth/refresh-tokens:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/example.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.RefreshTokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
      summary: Refresh auth tokens
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/example.RegisterResponse'
        "409":
          description: Email already taken
          schema:
            $ref: '#/definitions/example.DuplicateEmail'
      summary: Register as user
      tags:
      - Auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: The reset password token
        in: query
        name: token
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdatePassOrVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.ResetPasswordResponse'
        "401":
          description: Password reset failed
          schema:
            $ref: '#/definitions/example.FailedResetPassword'
      summary: Reset password
      tags:
      - Auth
  /auth/send-verification-email:
    post:
      description: An email will be sent to verify email.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.SendVerificationEmailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
      security:
      - BearerAuth: []
      summary: Send verification email
      tags:
      - Auth
  /auth/verify-email:
    post:
      parameters:
      - description: The verify email token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.VerifyEmailResponse'
        "401":
          description: Verify email failed
          schema:
            $ref: '#/definitions/example.FailedVerifyEmail'
      summary: Verify email
      tags:
      - Auth
  /comments:
    post:
      description: Create a comment
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.CreateComment'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create a comment
      tags:
      - Comments
  /comments/{id}:
    delete:
      description: Delete a comment
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a comment
      tags:
      - Comments
    get:
      description: Get a comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get a comment by ID
      tags:
      - Comments
    put:
      description: Update a comment
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.UpdateComment'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update a comment
      tags:
      - Comments
  /comments/movie/{movieEpsId}:
    get:
      description: Get comments by movie ID
      parameters:
      - description: Movie Eps ID
        example: drstn-s4-episode-8-sub-indo
        in: path
        name: movieEpsId
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get comments by movie ID
      tags:
      - Comments
  /discovery/popular:
    get:
      consumes:
      - application/json
      description: Get popular discover
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - default: anime
        description: Movie Type
        enum:
        - anime
        - kdrama
        - tv
        - movie
        in: query
        name: type
        type: string
      - default: popular
        description: Discovery Category
        enum:
        - popular
        - trending
        - ongoing
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get popular discover
      tags:
      - discovery
  /health-check:
    get:
      consumes:
      - application/json
      description: Check the status of services and database connections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.HealthCheckResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/example.HealthCheckResponseError'
      summary: Health Check
      tags:
      - Health
  /history:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get all history
      tags:
      - history
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.CreateHistory'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create a new history
      tags:
      - history
  /history/{id}:
    delete:
      parameters:
      - description: History ID (uint)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a history
      tags:
      - history
    get:
      parameters:
      - description: History ID (uint)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get a history by ID
      tags:
      - history
    put:
      consumes:
      - application/json
      parameters:
      - description: History ID (uint)
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.UpdateHistory'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update a history
      tags:
      - history
  /mdl:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      - default: popular
        description: Discovery category
        enum:
        - popular
        - trending
        - ongoing
        - rekom
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get all mdl
      tags:
      - mdl
  /movie/details:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term like title or studio
        in: query
        name: search
        type: string
      - default: anime
        description: Type of movie
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved data
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails'
      summary: Get all movie_details
      tags:
      - movie
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.CreateMovieDetails'
      produces:
      - application/json
      responses:
        "201":
          description: Data created successfully
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails'
      security:
      - BearerAuth: []
      summary: Create a new movie_details
      tags:
      - movie
  /movie/details/{id}:
    delete:
      parameters:
      - description: MovieDetails ID (uint)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a movie_details
      tags:
      - movie
    get:
      parameters:
      - description: MovieDetails ID (uint)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails'
      summary: Get a movie_details by ID
      tags:
      - movie
    put:
      consumes:
      - application/json
      parameters:
      - description: MovieDetails ID (uint)
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.UpdateMovieDetails'
      produces:
      - application/json
      responses:
        "200":
          description: Data updated successfully
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails'
      security:
      - BearerAuth: []
      summary: Update a movie_details
      tags:
      - movie
  /movie/episodes:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.CreateMovieEpisodes'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieEpisode'
      security:
      - BearerAuth: []
      summary: Create a new movie episodes
      tags:
      - movie
  /movie/episodes/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: MovieEps ID (string)
        in: path
        name: movie_eps_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.UpdateMovieEpisodes'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update a movie episodes
      tags:
      - movie
  /movie/episodes/{movie_eps_id}:
    delete:
      parameters:
      - description: MovieEps ID (string)
        in: path
        name: movie_eps_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a movie episodes
      tags:
      - movie
    get:
      parameters:
      - description: MovieEps ID (string)
        in: path
        name: movie_eps_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a movie episodes by ID
      tags:
      - movie
  /movie/episodes/{movie_id}/{movie_eps_id}:
    get:
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: string
      - description: Movie Eps ID
        in: path
        name: movie_eps_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get all movie episodes by movie ID
      tags:
      - movie
  /movie/episodes/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Episode ID
        in: formData
        name: movie_eps_id
        required: true
        type: string
      - description: Movie ID
        in: formData
        name: movie_id
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Resolution
        in: formData
        name: resolution
        required: true
        type: string
      - description: Video File
        in: formData
        name: file_video
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieEpisode'
      security:
      - BearerAuth: []
      summary: Upload new movie episode (with file)
      tags:
      - movie
  /otakudesu/:
    get:
      description: Scrape and get list of anime from Otakudesu homepage.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeHomeResponse'
      summary: Get homepage anime data
      tags:
      - Otakudesu
  /otakudesu/complete-anime/page/{page}:
    get:
      description: Scrape and get complete anime from Otakudesu.
      parameters:
      - description: Page
        example: 2
        in: path
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeHomeResponse'
      summary: Get complete anime
      tags:
      - Otakudesu
  /otakudesu/detail/{judul}:
    get:
      description: Scrape and get details and episode from Otakudesu.
      parameters:
      - description: Judul Anime
        example: ds-future-sub-indo
        in: path
        name: judul
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeEpisodeResponse'
      summary: Get details and episode
      tags:
      - Otakudesu
  /otakudesu/genre-list:
    get:
      description: Scrape and get all anime genre from Otakudesu.
      produces:
      - application/json
      responses: {}
      summary: Get All Anime Genre
      tags:
      - Otakudesu
  /otakudesu/genre/{genre}/page/{page}:
    get:
      description: Scrape and get anime by genre from Otakudesu.
      parameters:
      - description: Genre Anime
        example: adventure
        in: path
        name: genre
        required: true
        type: string
      - description: Current Page
        example: "0"
        in: path
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeByGenreResponse'
      summary: Get Anime Genre
      tags:
      - Otakudesu
  /otakudesu/ongoing-anime/page/{page}:
    get:
      description: Scrape and get ongoing anime from Otakudesu.
      parameters:
      - description: Page
        example: 2
        in: path
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeHomeResponse'
      summary: Get ongoing anime
      tags:
      - Otakudesu
  /otakudesu/play/{judul_eps}:
    get:
      description: Scrape and get episode source video from Otakudesu.
      parameters:
      - description: Judul Episode
        example: drstn-s4-episode-8-sub-indo
        in: path
        name: judul_eps
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeEpisodeVideoResponse'
      security:
      - BearerAuth: []
      summary: Get Episode Video Source
      tags:
      - Otakudesu
  /otakudesu/popular:
    get:
      description: Scrape and get popular anime from Otakudesu.
      produces:
      - application/json
      responses: {}
      summary: Get popular anime
      tags:
      - Otakudesu
  /otakudesu/search:
    get:
      description: Scrape and search anime by title from Otakudesu.
      parameters:
      - description: Title of the Anime
        example: one piece
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetOdAnimeEpisodeVideoResponse'
      summary: Search Anime
      tags:
      - Otakudesu
  /otakudesu/trending:
    get:
      description: Scrape and get trending anime from Otakudesu.
      produces:
      - application/json
      responses: {}
      summary: Get trending anime
      tags:
      - Otakudesu
  /request-movie:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse'
      security:
      - BearerAuth: []
      summary: Get all request_movie
      tags:
      - RequestMovie
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.CreateRequestMovie'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create a new request_movie
      tags:
      - RequestMovie
  /request-movie/{id}:
    delete:
      parameters:
      - description: RequestMovie ID (uint)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete a request_movie
      tags:
      - RequestMovie
    get:
      parameters:
      - description: RequestMovie ID (uint)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse'
      security:
      - BearerAuth: []
      summary: Get a request_movie by ID
      tags:
      - RequestMovie
    patch:
      consumes:
      - application/json
      parameters:
      - description: RequestMovie ID (uint)
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.UpdateRequestMovie'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update a request_movie
      tags:
      - RequestMovie
  /tmdb:
    get:
      description: Retrieve TMDb-based data (movie) by category (popular, trending,
        etc).
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page, max limit 20
        in: query
        name: limit
        type: integer
      - default: movie
        description: Media type
        enum:
        - tv
        - movie
        in: query
        name: type
        type: string
      - description: Media category
        enum:
        - popular
        - trending
        - ongoing
        - rekom
        in: query
        name: category
        required: true
        type: string
      - description: Search keyword (for rekom category need this param)
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse'
      summary: Get list of TMDb media (movie)
      tags:
      - Tmdb
  /users:
    get:
      description: Only admins can retrieve all users.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Maximum number of users
        in: query
        name: limit
        type: integer
      - description: Search by name or email or role
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetAllUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/example.Forbidden'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - Users
    post:
      description: Only admins can create other users.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/example.CreateUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/example.Forbidden'
        "409":
          description: Email already taken
          schema:
            $ref: '#/definitions/example.DuplicateEmail'
      security:
      - BearerAuth: []
      summary: Create a user
      tags:
      - Users
  /users/{id}:
    delete:
      description: Logged in users can delete only themselves. Only admins can delete
        other users.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.DeleteUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/example.Forbidden'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/example.NotFound'
      security:
      - BearerAuth: []
      summary: Delete a user
      tags:
      - Users
    get:
      description: Logged in users can fetch only their own user information. Only
        admins can fetch other users.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.GetUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/example.Forbidden'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/example.NotFound'
      security:
      - BearerAuth: []
      summary: Get a user
      tags:
      - Users
    patch:
      description: Logged in users can only update their own information. Only admins
        can update other users.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.UpdateUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/example.Unauthorized'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/example.Forbidden'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/example.NotFound'
        "409":
          description: Email already taken
          schema:
            $ref: '#/definitions/example.DuplicateEmail'
      security:
      - BearerAuth: []
      summary: Update a user
      tags:
      - Users
  /watchlists:
    post:
      description: User Create watchlist
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.CreateWatchlist'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create watchlist
      tags:
      - Watchlist
  /watchlists/:
    get:
      description: Only admins can retrieve all watchlists.
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get all watchlists
      tags:
      - Watchlist
  /watchlists/{movie_id}:
    delete:
      description: User Delete watchlist
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete watchlist
      tags:
      - Watchlist
    put:
      description: User Update watchlist
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.UpdateWatchlist'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Update watchlist
      tags:
      - Watchlist
securityDefinitions:
  BearerAuth:
    description: 'Example Value: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
