{
    "swagger": "2.0",
    "info": {
        "title": "NimeStream API documentation",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/anilist": {
            "get": {
                "description": "Retrieve anime from AniList API based on category. When using category=rekom, 'search' is required to perform a title-based recommendation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anilist"
                ],
                "summary": "Get anime discovery list (popular, trending, ongoing, rekomendasi)",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "trending",
                            "ongoing",
                            "rekom"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "Discovery category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "one piece",
                        "description": "Search term. Required if category is 'rekom'",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse"
                        }
                    }
                }
            }
        },
        "/anilist/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anilist"
                ],
                "summary": "Get a movie_details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieDetails ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "An email will be sent to reset password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.ForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.ForgotPasswordResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/example.NotFound"
                        }
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "description": "This route initiates the Google OAuth2 login flow. Please try this in your browser.",
                "tags": [
                    "Auth"
                ],
                "summary": "Login with google",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GoogleLoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "$ref": "#/definitions/example.FailedLogin"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.LogoutResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/example.NotFound"
                        }
                    }
                }
            }
        },
        "/auth/refresh-tokens": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh auth tokens",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.RefreshTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register as user",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Register"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/example.RegisterResponse"
                        }
                    },
                    "409": {
                        "description": "Email already taken",
                        "schema": {
                            "$ref": "#/definitions/example.DuplicateEmail"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The reset password token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdatePassOrVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.ResetPasswordResponse"
                        }
                    },
                    "401": {
                        "description": "Password reset failed",
                        "schema": {
                            "$ref": "#/definitions/example.FailedResetPassword"
                        }
                    }
                }
            }
        },
        "/auth/send-verification-email": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "An email will be sent to verify email.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send verification email",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.SendVerificationEmailResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    }
                }
            }
        },
        "/auth/verify-email": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The verify email token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.VerifyEmailResponse"
                        }
                    },
                    "401": {
                        "description": "Verify email failed",
                        "schema": {
                            "$ref": "#/definitions/example.FailedVerifyEmail"
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create a comment",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.CreateComment"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/comments/movie/{movieEpsId}": {
            "get": {
                "description": "Get comments by movie ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get comments by movie ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "drstn-s4-episode-8-sub-indo",
                        "description": "Movie Eps ID",
                        "name": "movieEpsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/comments/{id}": {
            "get": {
                "description": "Get a comment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get a comment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.UpdateComment"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a comment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/discovery": {
            "get": {
                "description": "Get popular discover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discovery"
                ],
                "summary": "Get popular discover",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "anime",
                            "kdrama",
                            "tv",
                            "movie"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Movie Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "trending",
                            "ongoing",
                            "search"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "Discovery Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term (Only used when category=search)",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/discovery/detail/{mediaType}/{title}": {
            "get": {
                "description": "Get detail by title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discovery"
                ],
                "summary": "Get detail by title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "anime",
                            "kdrama",
                            "tv",
                            "movie"
                        ],
                        "type": "string",
                        "default": "anime",
                        "description": "Media Type",
                        "name": "mediaType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/health-check": {
            "get": {
                "description": "Check the status of services and database connections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.HealthCheckResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/example.HealthCheckResponseError"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Get all history",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Create a new history",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.CreateHistory"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/history/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Get a history by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "History ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Update a history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "History ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.UpdateHistory"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Delete a history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "History ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/mdl": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mdl"
                ],
                "summary": "Get all mdl",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "trending",
                            "ongoing",
                            "rekom"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "Discovery category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/mdl/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mdl"
                ],
                "summary": "Get a movie_details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieDetails ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse"
                        }
                    }
                }
            }
        },
        "/movie/details": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get all movie_details",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term like title or studio",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "anime",
                        "description": "Type of movie",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved data",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Create a new movie_details",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.CreateMovieDetails"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Data created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails"
                        }
                    }
                }
            }
        },
        "/movie/details/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get a movie_details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieDetails ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Update a movie_details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieDetails ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.UpdateMovieDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data updated successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Delete a movie_details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieDetails ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/movie/episodes": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Create a new movie episodes",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.CreateMovieEpisodes"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieEpisode"
                        }
                    }
                }
            }
        },
        "/movie/episodes/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Upload new movie episode (with file)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Episode ID",
                        "name": "movie_eps_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "movie_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resolution",
                        "name": "resolution",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Video File",
                        "name": "file_video",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieEpisode"
                        }
                    }
                }
            }
        },
        "/movie/episodes/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Update a movie episodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieEps ID (string)",
                        "name": "movie_eps_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.UpdateMovieEpisodes"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/movie/episodes/{movie_eps_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get a movie episodes by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieEps ID (string)",
                        "name": "movie_eps_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Delete a movie episodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieEps ID (string)",
                        "name": "movie_eps_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/movie/episodes/{movie_id}/{movie_eps_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get all movie episodes by movie ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Movie Eps ID",
                        "name": "movie_eps_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/otakudesu/": {
            "get": {
                "description": "Scrape and get list of anime from Otakudesu homepage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get homepage anime data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeHomeResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/complete-anime/page/{page}": {
            "get": {
                "description": "Scrape and get complete anime from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get complete anime",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 2,
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeHomeResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/detail/{judul}": {
            "get": {
                "description": "Scrape and get details and episode from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get details and episode",
                "parameters": [
                    {
                        "type": "string",
                        "example": "ds-future-sub-indo",
                        "description": "Judul Anime",
                        "name": "judul",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeEpisodeResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/genre-list": {
            "get": {
                "description": "Scrape and get all anime genre from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get All Anime Genre",
                "responses": {}
            }
        },
        "/otakudesu/genre/{genre}/page/{page}": {
            "get": {
                "description": "Scrape and get anime by genre from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get Anime Genre",
                "parameters": [
                    {
                        "type": "string",
                        "example": "adventure",
                        "description": "Genre Anime",
                        "name": "genre",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "0",
                        "description": "Current Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeByGenreResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/ongoing-anime/page/{page}": {
            "get": {
                "description": "Scrape and get ongoing anime from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get ongoing anime",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 2,
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeHomeResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/play/{judul_eps}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scrape and get episode source video from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get Episode Video Source",
                "parameters": [
                    {
                        "type": "string",
                        "example": "drstn-s4-episode-8-sub-indo",
                        "description": "Judul Episode",
                        "name": "judul_eps",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeEpisodeVideoResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/popular": {
            "get": {
                "description": "Scrape and get popular anime from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get popular anime",
                "responses": {}
            }
        },
        "/otakudesu/search": {
            "get": {
                "description": "Scrape and search anime by title from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Search Anime",
                "parameters": [
                    {
                        "type": "string",
                        "example": "one piece",
                        "description": "Title of the Anime",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetOdAnimeEpisodeVideoResponse"
                        }
                    }
                }
            }
        },
        "/otakudesu/trending": {
            "get": {
                "description": "Scrape and get trending anime from Otakudesu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otakudesu"
                ],
                "summary": "Get trending anime",
                "responses": {}
            }
        },
        "/report-episode": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report_error"
                ],
                "summary": "Get all report_error",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report_error"
                ],
                "summary": "Create a new report_error",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_report_error_request.CreateReportError"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/report-episode/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report_error"
                ],
                "summary": "Get a report_error by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReportError ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report_error"
                ],
                "summary": "Delete a report_error",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReportError ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report_error"
                ],
                "summary": "Update a report_error",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReportError ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_report_error_request.UpdateReportError"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/request-movie": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestMovie"
                ],
                "summary": "Get all request_movie",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestMovie"
                ],
                "summary": "Create a new request_movie",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.CreateRequestMovie"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/request-movie/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestMovie"
                ],
                "summary": "Get a request_movie by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RequestMovie ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestMovie"
                ],
                "summary": "Delete a request_movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RequestMovie ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RequestMovie"
                ],
                "summary": "Update a request_movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "RequestMovie ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.UpdateRequestMovie"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/tmdb": {
            "get": {
                "description": "Retrieve TMDb-based data (movie) by category (popular, trending, etc).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tmdb"
                ],
                "summary": "Get list of TMDb media (movie)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page, max limit 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "tv",
                            "movie"
                        ],
                        "type": "string",
                        "default": "movie",
                        "description": "Media type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "trending",
                            "ongoing",
                            "rekom"
                        ],
                        "type": "string",
                        "description": "Media category",
                        "name": "category",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search keyword (for rekom category need this param)",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse"
                        }
                    }
                }
            }
        },
        "/tmdb/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tmdb"
                ],
                "summary": "Get a movie_details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MovieDetails ID (uint)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "tv",
                            "movie"
                        ],
                        "type": "string",
                        "default": "movie",
                        "description": "Type of movie",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Only admins can retrieve all users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of users",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email or role",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetAllUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/example.Forbidden"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Only admins can create other users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/example.CreateUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/example.Forbidden"
                        }
                    },
                    "409": {
                        "description": "Email already taken",
                        "schema": {
                            "$ref": "#/definitions/example.DuplicateEmail"
                        }
                    }
                }
            }
        },
        "/users/session": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_response.GetUserSessionResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logged in users can fetch only their own user information. Only admins can fetch other users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/example.Forbidden"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/example.NotFound"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logged in users can delete only themselves. Only admins can delete other users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.DeleteUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/example.Forbidden"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/example.NotFound"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logged in users can only update their own information. Only admins can update other users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.UpdateUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/example.Forbidden"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/example.NotFound"
                        }
                    },
                    "409": {
                        "description": "Email already taken",
                        "schema": {
                            "$ref": "#/definitions/example.DuplicateEmail"
                        }
                    }
                }
            }
        },
        "/watchlists": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User Create watchlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Create watchlist",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.CreateWatchlist"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/watchlists/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Only admins can retrieve all watchlists.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Get all watchlists",
                "responses": {}
            }
        },
        "/watchlists/{movie_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User Update watchlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Update watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.UpdateWatchlist"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User Delete watchlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Delete watchlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "example.CreateUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 201
                },
                "message": {
                    "type": "string",
                    "example": "Create user successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "user": {
                    "$ref": "#/definitions/example.User"
                }
            }
        },
        "example.DeleteUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Delete user successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.DuplicateEmail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 409
                },
                "message": {
                    "type": "string",
                    "example": "Email already taken"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.FailedLogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email or password"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.FailedResetPassword": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Password reset failed"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.FailedVerifyEmail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Verify email failed"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.Forbidden": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 403
                },
                "message": {
                    "type": "string",
                    "example": "You don't have permission to access this resource"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.ForgotPasswordResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "A password reset link has been sent to your email address."
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.GetAllUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.User"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "message": {
                    "type": "string",
                    "example": "Get all users successfully"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "total_pages": {
                    "type": "integer",
                    "example": 1
                },
                "total_results": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "example.GetOdAnimeByGenreResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreAnime"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "example.GetOdAnimeEpisodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.EpisodePageResult"
                },
                "message": {
                    "type": "string",
                    "example": "Berhasil mengambil data!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.GetOdAnimeEpisodeVideoResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeSourceData"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "example.GetOdAnimeHomeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeData"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Berhasil mengambil data!"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.GetUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Get user successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "user": {
                    "$ref": "#/definitions/example.User"
                }
            }
        },
        "example.GoogleLoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Login successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "tokens": {
                    "$ref": "#/definitions/example.Tokens"
                },
                "user": {
                    "$ref": "#/definitions/example.GoogleUser"
                }
            }
        },
        "example.GoogleUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "fake@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "e088d183-9eea-4a11-8d5d-74d7ec91bdf5"
                },
                "name": {
                    "type": "string",
                    "example": "fake name"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "verified_email": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "example.HealthCheck": {
            "type": "object",
            "properties": {
                "is_up": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Postgre"
                },
                "status": {
                    "type": "string",
                    "example": "Up"
                }
            }
        },
        "example.HealthCheckError": {
            "type": "object",
            "properties": {
                "is_up": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "failed to connect to 'host=localhost user=postgres database=wrongdb': server error (FATAL: database \"wrongdb\" does not exist (SQLSTATE 3D000))"
                },
                "name": {
                    "type": "string",
                    "example": "Postgre"
                },
                "status": {
                    "type": "string",
                    "example": "Down"
                }
            }
        },
        "example.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "is_healthy": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Health check completed"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.HealthCheck"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.HealthCheckResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "is_healthy": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Health check completed"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.HealthCheckError"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Login successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "tokens": {
                    "$ref": "#/definitions/example.Tokens"
                },
                "user": {
                    "$ref": "#/definitions/example.User"
                }
            }
        },
        "example.LogoutResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Logout successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.NotFound": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "Not found"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.RefreshToken": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
            }
        },
        "example.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "tokens": {
                    "$ref": "#/definitions/example.Tokens"
                }
            }
        },
        "example.RegisterResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 201
                },
                "message": {
                    "type": "string",
                    "example": "Register successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "tokens": {
                    "$ref": "#/definitions/example.Tokens"
                },
                "user": {
                    "$ref": "#/definitions/example.User"
                }
            }
        },
        "example.ResetPasswordResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Update password successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.SendVerificationEmailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Please check your email for a link to verify your account"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.TokenExpires": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "string",
                    "example": "2024-10-07T11:56:46.618180553Z"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
            }
        },
        "example.Tokens": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/example.TokenExpires"
                },
                "refresh": {
                    "$ref": "#/definitions/example.TokenExpires"
                }
            }
        },
        "example.Unauthorized": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Please authenticate"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "example.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Update user successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "user": {
                    "$ref": "#/definitions/example.User"
                }
            }
        },
        "example.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "fake@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "e088d183-9eea-4a11-8d5d-74d7ec91bdf5"
                },
                "name": {
                    "type": "string",
                    "example": "fake name"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "verified_email": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.VerifyEmailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Verify email successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.ForgotPassword": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake@example.com"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "password1"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_auth_request.Register": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake name"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "password1"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.CreateComment": {
            "type": "object",
            "required": [
                "content",
                "movie_id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_comment_request.UpdateComment": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.CreateHistory": {
            "type": "object",
            "properties": {
                "movie_eps_id": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                },
                "playback_time": {
                    "type": "integer"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_history_request.UpdateHistory": {
            "type": "object",
            "properties": {
                "playback_time": {
                    "type": "integer"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.CreateMovieDetails": {
            "type": "object",
            "required": [
                "genres",
                "movie_id",
                "movie_type",
                "thumbnail_url",
                "title"
            ],
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "demon",
                        "fantasy",
                        "supernatural"
                    ]
                },
                "movie_id": {
                    "type": "string",
                    "example": "wu-nao-monu"
                },
                "movie_type": {
                    "type": "string",
                    "example": "anime"
                },
                "producer": {
                    "type": "string",
                    "example": "Agate"
                },
                "rating": {
                    "type": "string",
                    "example": "5.9"
                },
                "release_date": {
                    "type": "string",
                    "example": "2023-05-01"
                },
                "status": {
                    "type": "string",
                    "example": "complete"
                },
                "studio": {
                    "type": "string",
                    "example": "Agate"
                },
                "synopsis": {
                    "type": "string",
                    "example": "Agate is a demon girl cursed with an eternal life. To forget the past, she throws half of her head into a deep valley and runs away. Unexpectedly, the tears flood the valley floor and form into a lake, triggering a flood in hell. Aloys, the Prince of Ghost comes to the Human World to find out the truth and finally finds the demon girl, starting a story of life and love."
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://s4.anilist.co/file/anilistcdn/media/anime/cover/medium/bx141914-P1xQHMXN7q6z.png"
                },
                "title": {
                    "type": "string",
                    "example": "Wu Nao Monü"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_request.UpdateMovieDetails": {
            "type": "object",
            "required": [
                "genres",
                "movie_type",
                "thumbnail_url",
                "title"
            ],
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "demon",
                        "fantasy",
                        "supernatural"
                    ]
                },
                "movie_type": {
                    "type": "string",
                    "example": "anime"
                },
                "producer": {
                    "type": "string",
                    "example": "Agate"
                },
                "rating": {
                    "type": "string",
                    "example": "5.9"
                },
                "release_date": {
                    "type": "string",
                    "example": "2023-05-01"
                },
                "status": {
                    "type": "string",
                    "example": "complete"
                },
                "studio": {
                    "type": "string",
                    "example": "Agate"
                },
                "synopsis": {
                    "type": "string",
                    "example": "Agate is a demon girl cursed with an eternal life. To forget the past, she throws half of her head into a deep valley and runs away. Unexpectedly, the tears flood the valley floor and form into a lake, triggering a flood in hell. Aloys, the Prince of Ghost comes to the Human World to find out the truth and finally finds the demon girl, starting a story of life and love."
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://s4.anilist.co/file/anilistcdn/media/anime/cover/medium/bx141914-P1xQHMXN7q6z.png"
                },
                "title": {
                    "type": "string",
                    "example": "Wu Nao Monü"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response.MovieDetailOnlyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id_source": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                },
                "movie_type": {
                    "type": "string"
                },
                "path_url": {
                    "type": "string"
                },
                "producer": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "rekomend": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response.MovieDetailOnlyResponse"
                    }
                },
                "release_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_eps": {
                    "type": "string"
                },
                "update_day": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.CreateMovieEpisodes": {
            "type": "object",
            "properties": {
                "movie_eps_id": {
                    "type": "string",
                    "example": "wu-nao-monu-eps-1"
                },
                "movie_id": {
                    "type": "string",
                    "example": "wu-nao-monu"
                },
                "resolution": {
                    "type": "string",
                    "example": "720p"
                },
                "title": {
                    "type": "string",
                    "example": "upload"
                },
                "video_url": {
                    "type": "string",
                    "example": "youtube"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_episode_request.UpdateMovieEpisodes": {
            "type": "object",
            "properties": {
                "movie_id": {
                    "type": "string"
                },
                "resolution": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_report_error_request.CreateReportError": {
            "type": "object",
            "properties": {
                "episode_id": {
                    "type": "string"
                },
                "problem_desc": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_report_error_request.UpdateReportError": {
            "type": "object",
            "properties": {
                "problem_desc": {
                    "type": "string"
                },
                "status_report": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.CreateRequestMovie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Yuuji Itadori joins Jujutsu Tech to exorcise curses."
                },
                "genre": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Action",
                        "Shounen"
                    ]
                },
                "status_movie": {
                    "type": "string",
                    "example": "Ongoing"
                },
                "status_request": {
                    "type": "string",
                    "example": "Pending"
                },
                "title": {
                    "type": "string",
                    "example": "Jujutsu Kaisen Season 2"
                },
                "type_movie": {
                    "type": "string",
                    "example": "Anime"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_request.UpdateRequestMovie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Yuuji Itadori joins Jujutsu Tech to exorcise curses."
                },
                "genre": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Action",
                        "Shounen"
                    ]
                },
                "status_movie": {
                    "type": "string",
                    "example": "Ongoing"
                },
                "status_request": {
                    "type": "string",
                    "example": "Pending"
                },
                "title": {
                    "type": "string",
                    "example": "Jujutsu Kaisen Season 2"
                },
                "type_movie": {
                    "type": "string",
                    "example": "TV"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.RequestMovieResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-06-27T15:04:05Z"
                },
                "description": {
                    "type": "string",
                    "example": "Yuuji Itadori joins Jujutsu Tech to exorcise curses."
                },
                "genre": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Action\"",
                        " \"Shounen\"]"
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "requested_by": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.UserResponse"
                },
                "status_movie": {
                    "type": "string",
                    "example": "Ongoing"
                },
                "status_request": {
                    "type": "string",
                    "example": "Pending"
                },
                "title": {
                    "type": "string",
                    "example": "Jujutsu Kaisen Season 2"
                },
                "type_movie": {
                    "type": "string",
                    "example": "TV"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-06-27T15:04:05Z"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                },
                "name": {
                    "type": "string",
                    "example": "Saeful"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake name"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "password1"
                },
                "role": {
                    "type": "string",
                    "maxLength": 50,
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "user"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdatePassOrVerify": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "password1"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_request.UpdateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "fake name"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "password1"
                },
                "role": {
                    "type": "string",
                    "maxLength": 50,
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "user"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_response.GetUserSessionResponse": {
            "type": "object",
            "properties": {
                "user_info": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_response.GetUsersResponse"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_user_response.GetUsersResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_email_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response.MovieDetailOnlyResponse"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.RequestMovieResponse"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithDetail-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieEpisode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieEpisode"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response_MovieDetailOnlyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_movie_details_response.MovieDetailOnlyResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_results": {
                    "type": "integer"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response_RequestMovieResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_request_movie_response.RequestMovieResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_results": {
                    "type": "integer"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_util_response.SuccessWithPaginate-github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model_MovieDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_results": {
                    "type": "integer"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.CreateWatchlist": {
            "type": "object",
            "required": [
                "movie_id"
            ],
            "properties": {
                "movie_id": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_dto_watchlist_request.UpdateWatchlist": {
            "type": "object",
            "required": [
                "movie_id"
            ],
            "properties": {
                "movie_id": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeData": {
            "type": "object",
            "properties": {
                "judul_path": {
                    "type": "string"
                },
                "latest_ep": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "update_anime": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeDetail": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreInfo"
                    }
                },
                "producer": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_eps": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeSourceData": {
            "type": "object",
            "properties": {
                "current_ep": {
                    "type": "string"
                },
                "detail_url": {
                    "type": "string"
                },
                "download_url": {
                    "type": "string"
                },
                "episodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode"
                    }
                },
                "next_ep_url": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.VideoSource"
                    }
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.EpisodePageResult": {
            "type": "object",
            "properties": {
                "anime_detail": {
                    "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeDetail"
                },
                "episode": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode"
                    }
                },
                "rekomend": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.SearchResult"
                    }
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreAnime": {
            "type": "object",
            "properties": {
                "episodes": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreInfo": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieDetails": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "movie_id": {
                    "type": "string"
                },
                "movie_type": {
                    "type": "string"
                },
                "producer": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "synopsis": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "description": "Di title harus sama seperti source anilist atau sebgainya, karena title ini akan digunakan sebagai key finding",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.MovieEpisode": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "movieEpsID": {
                    "type": "string"
                },
                "movieId": {
                    "type": "string"
                },
                "resolution": {
                    "type": "string"
                },
                "sourceBy": {
                    "type": "string"
                },
                "title": {
                    "description": "title untuk penentu source nya misal pixeldrain atau uploads",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "videoURL": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.SearchResult": {
            "type": "object",
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.GenreInfo"
                    }
                },
                "rating": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.VideoSource": {
            "type": "object",
            "properties": {
                "data_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_muhammadsaefulr_NimeStreamAPI_internal_domain_model.AnimeEpisode"
                    }
                },
                "res": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Example Value: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}